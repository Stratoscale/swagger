// Code generated by mockery v1.0.0. DO NOT EDIT.
package store

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockAPI is an autogenerated mock type for the API type
type MockAPI struct {
	mock.Mock
}

// InventoryGet provides a mock function with given fields: ctx, params
func (_m *MockAPI) InventoryGet(ctx context.Context, params *InventoryGetParams) (*InventoryGetOK, error) {
	ret := _m.Called(ctx, params)

	var r0 *InventoryGetOK
	if rf, ok := ret.Get(0).(func(context.Context, *InventoryGetParams) *InventoryGetOK); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*InventoryGetOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *InventoryGetParams) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OrderCreate provides a mock function with given fields: ctx, params
func (_m *MockAPI) OrderCreate(ctx context.Context, params *OrderCreateParams) (*OrderCreateOK, error) {
	ret := _m.Called(ctx, params)

	var r0 *OrderCreateOK
	if rf, ok := ret.Get(0).(func(context.Context, *OrderCreateParams) *OrderCreateOK); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*OrderCreateOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *OrderCreateParams) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OrderDelete provides a mock function with given fields: ctx, params
func (_m *MockAPI) OrderDelete(ctx context.Context, params *OrderDeleteParams) (*OrderDeleteNoContent, error) {
	ret := _m.Called(ctx, params)

	var r0 *OrderDeleteNoContent
	if rf, ok := ret.Get(0).(func(context.Context, *OrderDeleteParams) *OrderDeleteNoContent); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*OrderDeleteNoContent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *OrderDeleteParams) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OrderGet provides a mock function with given fields: ctx, params
func (_m *MockAPI) OrderGet(ctx context.Context, params *OrderGetParams) (*OrderGetOK, error) {
	ret := _m.Called(ctx, params)

	var r0 *OrderGetOK
	if rf, ok := ret.Get(0).(func(context.Context, *OrderGetParams) *OrderGetOK); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*OrderGetOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *OrderGetParams) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
